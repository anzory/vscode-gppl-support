{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Define GPPL",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.modifier.gppl",
					"match": "\\b(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))\\b",
					"comment": "Define Digits"
				},
				{
					"name": "keyword.control.gppl",
					"match": "\\b[ABCDFGHMXYZFOPSTIJKRWQ]\\b",
					"comment": "Define ISO GCode words"
				},
				{
					"name": "keyword.modifier.gppl",
					"match": "\\b(true|false)\\b",
					"comment": "Define Logical Constants"
				},
				{
					"name": "keyword.control.gppl",
					"match": "\\b(global|local|string|logical|integer|numeric)\\b",
					"comment": "Define GPPL Modifier"
				},
				{
					"name": "keyword.control.gppl",
					"match": "\\b(if|else|elseif|endif|then|and|or|not|eq|ne|le|lt|ge|gt|==|<>|<=|<|>=|>)\\b",
					"comment": "Define GPPL Logical Functions"
				},
				{
					"name": "keyword.control.gppl",
					"match": "\\b(while|endw)\\b",
					"comment": "Define GPPL Loop Execution Statement"
				},
				{
					"name": "keyword.control.gppl",
					"match": "\\b(abort|break|return|exit)\\b",
					"comment": "Define GPPL Stop Execution Statements"
				},
				{
					"name": "keyword.control.gppl",
					"match": "\\b(active|change|even|odd)\\b",
					"comment": "Define GPPL Logical Operators"
				},
				{
					"name": "keyword.control.gppl",
					"match": "\\b(date|dup|instr|left|lower|replace|rev|right|space|strlen|substr|time|tonum|tostr|trim|upper)\\b",
					"comment": "Define GPPL String Functions"
				},
				{
					"name": "keyword.control.gppl",
					"match": "\\b(abs|acos|adims|alen|ang|asin|asize|atan|atan2|cos|dist|exp|frac|int|log|log10|mod|norm360|pow|round|round2val|sign|sin|sqrt|square|tan|todeg|torad)\\b",
					"comment": "Define GPPL Numeric Functions"
				},
				{
					"name": "markup.bold.gppl",
					"match": "@.*\\b|endp\\b",
					"comment": "Define GPPL Procedures"
				},
				{
					"name": "invalid.gppl",
					"match": "\\b(call)\\b",
					"comment": "Define Call GPPL Procedures"
				},
				{
					"name": "comment.gppl",
					"match": "(;.*$)",
					"comment": "Define GPPL Comments"
				},
				{
					"name": "variable.other.event.gppl",
					"match": "(\\'|\"|\\,)",
					"comment": "Define Quotes"
				},
				{
					"name": "variable.event.gppl",
					"match": "(\\(|\\)|\\[|\\])",
					"comment": "Define Brackets"
				},
				{
					"name": "support.function.gppl",
					"match": "(\\{|\\})",
					"comment": "Define Braces"
				}
			]
		},
		"strings": {
			"patterns": [

				{
					"name": "string.control.gppl",
					"match": "\\b([a-zA-Z_$][a-zA-Z_$0-9]*)\\b|[\\%]",
					"comment": "Define GPPL Strings"
				}
			]
		}
	},
	"scopeName": "source.gppl"
}